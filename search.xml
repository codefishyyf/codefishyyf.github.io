<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SpringBoot日志实现</title>
    <url>/2022/01/09/SpringBoot%E6%97%A5%E5%BF%97%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>SpringMVC1简介</title>
    <url>/2022/01/11/SpringMVC1%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220111215434.jpeg" alt="img"></p>
<span id="more"></span>



<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220112000315.png" alt="image-20220111215256881"></p>
<h1 id="一、SpringMVC简介"><a href="#一、SpringMVC简介" class="headerlink" title="一、SpringMVC简介"></a>一、SpringMVC简介</h1><h2 id="1、什么是MVC"><a href="#1、什么是MVC" class="headerlink" title="1、什么是MVC"></a>1、什么是MVC</h2><p>MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分</p>
<p>M：Model，模型层，指工程中的JavaBean，作用是处理数据。</p>
<p>javaBean分为两类：</p>
<ul>
<li>一类称为实体类Bean：专门存储业务数据的，如Student，User等。</li>
<li>一类称为专业处理Bean：指Service或Dao对象，专门用于处理业务逻辑和数据访问。</li>
</ul>
<p>V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据</p>
<p>C：Controller，控制层，指工程中的servlet，作用是接受请求和相应浏览器</p>
<p>MVC的工作流程：</p>
<p>用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应Model层处理请求，处理完毕</p>
<h2 id="2、什么是SpringMVC"><a href="#2、什么是SpringMVC" class="headerlink" title="2、什么是SpringMVC"></a>2、什么是SpringMVC</h2><p>SpringMVC是Spring的一个后续产品，是Spring的一个子项目。</p>
<p>SpringMVC是Spring为表述层开发提供的一整套完备的解决方案。在表示层框架经历Strust,WebWork、Strust2等诸多产品的历代更迭之后，目前业界普遍选择了SpringMVC作为JavaEE项目表述层开发的首选方案。</p>
<p>注：三层架构分为：表述层、业务逻辑层、数据访问层。表述层表示前台页面和后台servlet。</p>
<h2 id="3、SpringMVC的特点"><a href="#3、SpringMVC的特点" class="headerlink" title="3、SpringMVC的特点"></a>3、SpringMVC的特点</h2><ul>
<li>Spring家族原生产品，与IOC容器等基础设施无缝对接</li>
<li>基于原生的Servlet，通过了功能强大的前端控制器DispatcherServlet,对请求和相应进行统一处理</li>
<li>表述层各细分领域需要解决全方位覆盖，提供全面解决方案</li>
<li>代码清晰简介，大幅度提升开发效率</li>
<li>内部组件化程度高，可插拨式组件即插即用，想要什么功能配置相应组件即可</li>
<li>性能显著，尤其适合现代大型、超大型互联网项目要求</li>
</ul>
<h1 id="二、HelloWorld"><a href="#二、HelloWorld" class="headerlink" title="二、HelloWorld"></a>二、HelloWorld</h1><h2 id="1、开发环境"><a href="#1、开发环境" class="headerlink" title="1、开发环境"></a>1、开发环境</h2><p>IDE：idea2020.1.3</p>
<p>构建工具：maven3.6.1</p>
<p>服务器：Tomcat8.5.57</p>
<p>Spring版本：5.3.1</p>
<h2 id="2、创建maven工程"><a href="#2、创建maven工程" class="headerlink" title="2、创建maven工程"></a>2、创建maven工程</h2><p><strong>第一步：添加web模块</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220111234123.png" alt="image-20220111234123345"></p>
<p><strong>第二步：打包方式war</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>第三步：引入依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--SpringMVC--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--日志--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ServletAPI--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Spring5和Thymeleaf整合包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3、配置web-xml文件"><a href="#3、配置web-xml文件" class="headerlink" title="3、配置web.xml文件"></a>3、配置web.xml文件</h2><p>注册SpringMVC的前端控制器DispatcherServlet</p>
<p><strong>第一步：默认配置方式</strong></p>
<p>在此配置作用下SpringMVC的配置文件默认位于WEB-INFO下，默认名称为<servlet-name>-servlet.xml,例如，以下配置所对应SpringMVC的配置文件位于WEB-INFO下，文件名为springMVC-servlet.xml。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--默认配置方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    设置SpringMVC的核心控制器所能处理的请求的请求路径</span></span><br><span class="line"><span class="comment">    这个&quot;/&quot;所匹配的请求可以使login或.html或.js或.css方式的请求路径</span></span><br><span class="line"><span class="comment">    但是&quot;/&quot;不能匹配.jsp请求路径的请求，因为.jsp本身就是一个servlet。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>第二步：扩展配置方式【生产环境中推荐使用】</strong></p>
<p>可通过init-param标签设置SpringMVC配置文件的位置和名称，通过load-on-startup标签设置SpringMVC前端控制器DispatcherServlet的初始化时间</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!--扩展配置方式【工作用使用这一种】--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--通过下面的init-param初始化标签配置SpringMVC配置文件的位置和名称--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--contextConfigLocation为固定值,表示上下文配置路径--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources</span></span><br><span class="line"><span class="comment">	这里的SpringMVC.xml需要在resources文件夹下创建一个SpringMVC.xml的配置文件	</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:SpringMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--将前端控制器dispatcherServlet的初始化时间提前到服务器启动时--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注：</p>
<p><url-pattern>标签中使用/和/*的区别：</p>
<p>/所匹配的请求可以是/login或.html或.js方式的请求路径，但是/不能匹配.jsp请求路径的请求。</p>
<p>因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到响应的页面。</p>
<p>**/*<strong>则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用</strong>/***的写法。</p>
<h2 id="4、创建请求控制器"><a href="#4、创建请求控制器" class="headerlink" title="4、创建请求控制器"></a>4、创建请求控制器</h2><p>由于前端控制器对浏览器发送的请求进行了统一的处理，但是具体的请求有不同的处理过程，因此需要创建处理具体请求的类，即请求控制器。</p>
<p>请求控制器中每一个处理请求的方法成为控制器方法。</p>
<p>因为SpringMVC的控制器由一个POJO（普通的java类）担任，因此需要通过@Controller注解将其标识为一个控制层组件，交给Spring的IOC容器管理，此时SpringMVC才能够识别控制器的存在。</p>
<p>下面方式通过注解+扫描的方式【不推荐使用bean的方式】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--在SpringMVC.xml配置文件 中开启组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.codefish&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="5、创建SpringMVC的配置文件"><a href="#5、创建SpringMVC的配置文件" class="headerlink" title="5、创建SpringMVC的配置文件"></a>5、创建SpringMVC的配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1、配置Thymeleaf视图解析器</span><br><span class="line">    <span class="comment">&lt;!--配置Thymeleaf视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--视图前缀--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--视图后缀--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        处理静态资源，例如html、js、css、jpg,若只设置该标签，则只能访问静态资源，其他请求则无法访问</span></span><br><span class="line"><span class="comment">        此时必须设置&lt;mvc:annotation-driven/&gt;解决问题</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--处理响应中文内容乱码--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultCharset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="6、测试HelloWorld"><a href="#6、测试HelloWorld" class="headerlink" title="6、测试HelloWorld"></a>6、测试HelloWorld</h2><p><strong>a&gt;实现对首页的访问</strong></p>
<p>在请求控制器中创建处理请求的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@RequestMapping注解：处理请求和控制器方法之间的映射关系</span></span><br><span class="line"><span class="comment">//@RequestMapping注解的value属性可以通过请求地址匹配请求，/表示的当前工程的上下文路径</span></span><br><span class="line"><span class="comment">//localhost:8080/SpringMVC/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//设置视图名称</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>b&gt;通过超链接跳转到指定页面</strong><br>        在主页index.html中设置超链接</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,欢迎codefishyyf学习SpringMVC<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--路径分为绝对路径和相对路径：</span></span><br><span class="line"><span class="comment">    以/开头的路径为绝对路径，绝对路径分为浏览器解析的和服务器解析的</span></span><br><span class="line"><span class="comment">    超链接中的绝对路径就是由浏览器解析的，这个时候/表示：localhost:8080</span></span><br><span class="line"><span class="comment">    所以需要加上上下文路径。/SpringMVC_demo1。由于tomcat中的上下文路径是可以修改的，</span></span><br><span class="line"><span class="comment">    所以使用thymeleaf语法中的来动态获取上下文路径。</span></span><br><span class="line"><span class="comment">    &lt;a th:href=&quot;@&#123;/target&#125;&quot;&gt;访问目标页面target.html&lt;/a&gt;</span></span><br><span class="line"><span class="comment">    这样thymeleaf就会自动给我们加上上下文路径。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;a href=&quot;/SpringMVC_demo1/target&quot;&gt;访问目标页面target.html&lt;/a&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/target&#125;&quot;</span>&gt;</span>访问目标页面target.html<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toTarget</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//设置视图名称</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h2><p>浏览器发送请求，若请求地址复合前端控制器的url-pattern，该请求就会被前端控制器DispatcherServlet处理。前端控制器会读取SpringMVC的核心配置文件，通过扫描组件找到控制器，将请求地址和控制器中@RequestMapping注解的value属性进行匹配，若匹配成功，该注解所标识的控制器方法就是处理请求的方法。处理请求的方法返回一个字符串类型的视图名称，该视图名称会被视图解析器解析，加上前缀和后缀组成视图的路径，通过Thymeleaf对视图进行渲染，最终转发到视图所对应页面。</p>
]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC2基础功能</title>
    <url>/2022/01/11/SpringMVC2%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220111215434.jpeg" alt="img"></p>
<span id="more"></span>

<h1 id="一、-RequestMapping注解"><a href="#一、-RequestMapping注解" class="headerlink" title="一、@RequestMapping注解"></a>一、@RequestMapping注解</h1><h2 id="1、-RequestMapping注解的功能"><a href="#1、-RequestMapping注解的功能" class="headerlink" title="1、@RequestMapping注解的功能"></a>1、@RequestMapping注解的功能</h2><p>从注解的名称上我们可以看到，@RequestMapping注解的作用就是将请求和请求的控制器方法关联起来，简历映射关系。</p>
<p>SpringMVC接收到指定的请求，就会来找到在映射关系统对应的控制器方法来处理这个请求。</p>
<h2 id="2、-RequestMapping注解的位置"><a href="#2、-RequestMapping注解的位置" class="headerlink" title="2、@RequestMapping注解的位置"></a>2、@RequestMapping注解的位置</h2><p><font color=red><strong>@Target({ElementType.TYPE, ElementType.METHOD})说明@RequestMapping可以标识到类和方法上</strong></font></p>
<p>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息</p>
<p>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tar/target&#125;&quot;</span>&gt;</span>用于测试@RequstMapping<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/tar&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestMappingController</span> </span>&#123;</span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3、-RequestMapping注解的value属性"><a href="#3、-RequestMapping注解的value属性" class="headerlink" title="3、@RequestMapping注解的value属性"></a>3、@RequestMapping注解的value属性</h2><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220112231731.png" alt="image-20220112231722614"></p>
<p>@RequestMapping注解的value属性通过请求地址匹配请求映射。</p>
<p>@RequestMapping注解的value属性是一个字符串类型的数组，标识该请求映射能够匹配多个请求地址所对应的请求</p>
<p>@RequestMapping注解的value属性必须设置，至少通过请求地址匹配请求映射</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/target&#125;&quot;</span>&gt;</span>用于测试@RequstMapping注解的value属性--&gt;/target<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>用于测试@RequstMapping注解的value属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestMappingController</span> </span>&#123;</span><br><span class="line">	<span class="meta">@RequestMapping(value = &#123;&quot;/target&quot;,&quot;/test&quot;&#125;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4、-RequestMapping注解的method属性"><a href="#4、-RequestMapping注解的method属性" class="headerlink" title="4、@RequestMapping注解的method属性"></a>4、@RequestMapping注解的method属性</h2><p>@RequestMapping注解的method属性通过请求的请求方式（get或post）匹配请求映射。</p>
<p>@RequestMapping注解的method属性是一个RequestMthod类型的数组，表示该请求能够匹配多种请求方式的请求</p>
<p>若当前的请求地址满足请求映射的value属性，但是请求方式不满足method属性，则浏览器报错405：</p>
<p>Request method’POST’ not supported</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &#123;&quot;/target&quot;,&quot;/test&quot;&#125;,</span></span><br><span class="line"><span class="meta">		method = &#123;RequestMethod.POST,RequestMethod.GET&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestMapping</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用method必须要有value！！！</strong></p>
<blockquote>
<p>注：</p>
<p>1、对于处理指定请求方式的控制器方法，SpringMVC中提供了@RequestMapping的派生主机</p>
<p>处理get请求的映射–&gt;@GetMapping</p>
<p>处理post请求的映射–&gt;@PostMapping</p>
<p>处理put请求的映射–&gt;@PutMapping</p>
<p>处理delete请求的映射–&gt;@DeleteMapping</p>
<p>2、常用的请求方式有GET、POST、 PUT、 DELETE</p>
<p>但是目前浏览器只支持GET和POST，若在form表单提交时，为method设置了其他请求方式的字符串（put或delete），则按照默认的请求方式get处理。</p>
<p>若要发送put和delete请求，则需要通过Spring提供的过滤器HiddenHttpMethodFilter。</p>
</blockquote>
<h2 id="5、-RequestMapping注解的params属性（了解）"><a href="#5、-RequestMapping注解的params属性（了解）" class="headerlink" title="5、@RequestMapping注解的params属性（了解）"></a>5、@RequestMapping注解的params属性（了解）</h2><p>@RequestMapping注解的params属性通过请求的请求参数匹配请求映射</p>
<p>@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数和请求映射的匹配关系</p>
<p><strong>“param”：要求请求映射所匹配的请求必须携带param请求参数</strong></p>
<p><strong>“！param”：要求请求映射所匹配的请求必须不能携带param请求参数</strong></p>
<p><strong>“param=value”：要求请求映射所匹配的请求必须携带param请求参数且param=value</strong></p>
<p><strong>“param！=value”：要求请求映射所匹配的请求必须携带param请求参数且param! =value</strong></p>
<h2 id="6、-RequestMapping注解的headers属性（了解）"><a href="#6、-RequestMapping注解的headers属性（了解）" class="headerlink" title="6、@RequestMapping注解的headers属性（了解）"></a>6、@RequestMapping注解的headers属性（了解）</h2><h2 id="7、SpringMVC支持ant风格的路径"><a href="#7、SpringMVC支持ant风格的路径" class="headerlink" title="7、SpringMVC支持ant风格的路径"></a>7、SpringMVC支持ant风格的路径</h2><h2 id="8、SpringMVC支持路径中的占位符【重点】"><a href="#8、SpringMVC支持路径中的占位符【重点】" class="headerlink" title="8、SpringMVC支持路径中的占位符【重点】"></a>8、SpringMVC支持路径中的占位符【重点】</h2><h1 id="二、SpringMVC获取请求参数"><a href="#二、SpringMVC获取请求参数" class="headerlink" title="二、SpringMVC获取请求参数"></a>二、SpringMVC获取请求参数</h1><h2 id="1、通过ServletAPI获取请求参数"><a href="#1、通过ServletAPI获取请求参数" class="headerlink" title="1、通过ServletAPI获取请求参数"></a>1、通过ServletAPI获取请求参数</h2><h2 id="2、通过控制器方法的形参获取请求参数"><a href="#2、通过控制器方法的形参获取请求参数" class="headerlink" title="2、通过控制器方法的形参获取请求参数"></a>2、通过控制器方法的形参获取请求参数</h2><h2 id="3、-RequestParam注解"><a href="#3、-RequestParam注解" class="headerlink" title="3、@RequestParam注解"></a>3、@RequestParam注解</h2><h2 id="4、-RequestHeader注解"><a href="#4、-RequestHeader注解" class="headerlink" title="4、@RequestHeader注解"></a>4、@RequestHeader注解</h2><h2 id="5、-CookieValue注解"><a href="#5、-CookieValue注解" class="headerlink" title="5、@CookieValue注解"></a>5、@CookieValue注解</h2>]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC3RESTFul</title>
    <url>/2022/01/11/SpringMVC3RESTFul/</url>
    <content><![CDATA[<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>SpringMVC4执行流程</title>
    <url>/2022/01/11/SpringMVC4%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>SpringMVC5注解配置</title>
    <url>/2022/01/11/SpringMVC5%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>SpringMVC6扩展功能</title>
    <url>/2022/01/11/SpringMVC6%E6%89%A9%E5%B1%95%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<span id="more"></span>

]]></content>
  </entry>
  <entry>
    <title>git</title>
    <url>/2021/12/26/git/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226175034.jpeg" alt="img"></p>
<h1 id="Git、GitHub、Gitee、GitLab"><a href="#Git、GitHub、Gitee、GitLab" class="headerlink" title="Git、GitHub、Gitee、GitLab"></a>Git、GitHub、Gitee、GitLab</h1><span id="more"></span>

<h2 id="一、Git介绍"><a href="#一、Git介绍" class="headerlink" title="一、Git介绍"></a>一、Git介绍</h2><p>分布式版本控制工具 ：Git</p>
<p>集中式版本控制工具：SVN</p>
<p>、IDEA中使用Git</p>
]]></content>
      <categories>
        <category>GIT</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客一</title>
    <url>/2021/12/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%80/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226184858.png" alt="image-20211226184858198"></p>
<h1 id="前提准备：安装Git、Node-js、Sublime、typora"><a href="#前提准备：安装Git、Node-js、Sublime、typora" class="headerlink" title="前提准备：安装Git、Node.js、Sublime、typora"></a>前提准备：安装Git、Node.js、Sublime、typora</h1><span id="more"></span>

<p>[toc]</p>
<h1 id="一、Git安装"><a href="#一、Git安装" class="headerlink" title="一、Git安装"></a>一、Git安装</h1><h2 id="1-1、下载Git"><a href="#1-1、下载Git" class="headerlink" title="1.1、下载Git"></a>1.1、下载Git</h2><p>Git官网：<a href="https://git-scm.com/download">https://git-scm.com/download</a></p>
<p>Git版本：Git2.32</p>
<img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226185102.png" alt="Image" style="zoom:70%;" />

<img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226185230.png" alt="Image" style="zoom: 70%;" />

<h2 id="1-2、安装Git"><a href="#1-2、安装Git" class="headerlink" title="1.2、安装Git"></a>1.2、安装Git</h2><p><strong>1、使用许可声明</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226185334.png" alt="Image"></p>
<p><strong>2、选择安装路径</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226185606.png" alt="Image"></p>
<p><strong>3、选择安装组件</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226185618.png" alt="Image"></p>
<p><strong>4、选择开始页</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190155.png" alt="Image"></p>
<p><strong>5、选择git文件默认的编辑器</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190202.png" alt="Image"></p>
<p><strong>6、调整path环境</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190435.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190447.png" alt="Image"></p>
<p><strong>7、选择https后端传输</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190504.png" alt="Image"></p>
<p><strong>8、配置行尾符号转换</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190521.png" alt="Image"></p>
<p><strong>9、配置终端模拟器与gitBash一起使用</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190544.png" alt="Image"></p>
<p><strong>10、配置额外的选项</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190559.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190605.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190613.png" alt="Image"></p>
<p><strong>11、实验室选项</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190632.png" alt="Image"></p>
<p><strong>12、安装完成</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190646.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190653.png" alt="Image"></p>
<p><strong>13、验证安装完成</strong></p>
<p>方式一：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190704.png" alt="Image"></p>
<p>方式二：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190711.png" alt="Image"></p>
<h1 id="二、Node-js安装"><a href="#二、Node-js安装" class="headerlink" title="二、Node.js安装"></a>二、Node.js安装</h1><h2 id="2-1、下载node-js"><a href="#2-1、下载node-js" class="headerlink" title="2.1、下载node.js"></a>2.1、下载node.js</h2><p>Node.js中文官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p>
<p>Node.js版本：v14.17.1</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226190857.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191215.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191212.png" alt="Image"></p>
<h2 id="2-2、安装node-js"><a href="#2-2、安装node-js" class="headerlink" title="2.2、安装node.js"></a>2.2、安装node.js</h2><p><strong>1、开始安装</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191209.png" alt="Image"></p>
<p><strong>2、勾选同意信息</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191304.png" alt="Image"></p>
<p><strong>3、选择安装路径</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191313.png" alt="Image"></p>
<p><strong>4、自动配置path路径</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191321.png" alt="Image"></p>
<p><strong>5、等待安装完成</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191056.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191145.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191158.png" alt="Image"></p>
<p><strong>6、测试安装成功</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191047.png" alt="Image"></p>
<h1 id="三、Sublime安装"><a href="#三、Sublime安装" class="headerlink" title="三、Sublime安装"></a>三、Sublime安装</h1><h2 id="3-1、下载sublime"><a href="#3-1、下载sublime" class="headerlink" title="3.1、下载sublime"></a>3.1、下载sublime</h2><p>sublime官网：<a href="https://www.sublimetext.com/">https://www.sublimetext.com/</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191523.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191744.png" alt="Image"></p>
<h2 id="3-2、安装sublime"><a href="#3-2、安装sublime" class="headerlink" title="3.2、安装sublime"></a>3.2、安装sublime</h2><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191715.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191755.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191801.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191807.png" alt="Image"></p>
<h1 id="四、Typora安装"><a href="#四、Typora安装" class="headerlink" title="四、Typora安装"></a>四、Typora安装</h1><h2 id="4-1、下载Typora"><a href="#4-1、下载Typora" class="headerlink" title="4.1、下载Typora"></a>4.1、下载Typora</h2><p>typora官网：<a href="https://typora.io/">https://typora.io/</a></p>
<p>typora版本：0.10.11（beta）</p>
<h2 id="4-2、安装Typora"><a href="#4-2、安装Typora" class="headerlink" title="4.2、安装Typora"></a>4.2、安装Typora</h2><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191853.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191912.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191919.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226191927.png" alt="Image"></p>
]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客三</title>
    <url>/2021/12/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%89/</url>
    <content><![CDATA[<img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226184506.jpeg" alt="img" style="zoom: 25%;" />

<h1 id="启用next主题，并配置"><a href="#启用next主题，并配置" class="headerlink" title="启用next主题，并配置"></a>启用next主题，并配置</h1><span id="more"></span>

<p>[toc]</p>
<h1 id="一、设置博客主题"><a href="#一、设置博客主题" class="headerlink" title="一、设置博客主题"></a>一、设置博客主题</h1><h3 id="1、下载next主题"><a href="#1、下载next主题" class="headerlink" title="1、下载next主题"></a>1、下载next主题</h3><h3 id="2、站点配置文件–启用next主题"><a href="#2、站点配置文件–启用next主题" class="headerlink" title="2、站点配置文件–启用next主题"></a>2、站点配置文件–启用next主题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将下载好的next主题，解压后放到Blog-&gt;Themes文件夹中，并改名为next</span><br><span class="line">设置站点配置文件中的theme</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226201159.png" alt="Image"></p>
<h3 id="3、站点配置文件–设置博客文字描述和中文语言"><a href="#3、站点配置文件–设置博客文字描述和中文语言" class="headerlink" title="3、站点配置文件–设置博客文字描述和中文语言"></a>3、站点配置文件–设置博客文字描述和中文语言</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">云飞の博客</span>               <span class="comment"># 网站的标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span>                   <span class="comment"># 子标题</span></span><br><span class="line"><span class="attr">description:</span>                   <span class="comment"># 描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Java</span>  <span class="string">目标</span>  <span class="string">坚持</span>      <span class="comment"># 网站关键字</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">云飞</span>                    <span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>                 <span class="comment"># 网站采用的语言   </span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span>         <span class="comment"># 网站的时区</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226201528.png" alt="Image"></p>
<h3 id="4、站点配置文件–设置首页点击阅读全文"><a href="#4、站点配置文件–设置首页点击阅读全文" class="headerlink" title="4、站点配置文件–设置首页点击阅读全文"></a>4、站点配置文件–设置首页点击阅读全文</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">安装插件：</span><br><span class="line">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202438.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在站点配置文件中添加以下代码：</span></span><br><span class="line"><span class="attr">excerpt:</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">5</span>  </span><br><span class="line">  <span class="attr">excerpt_excludes:</span> []</span><br><span class="line">  <span class="attr">more_excludes:</span> []</span><br><span class="line">  <span class="attr">hideWholePostExcerpts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202534.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在主题配置文件中添加以下代码(或者ctrl+F找到这个位置，修改为true)：</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202615.png" alt="Image"></p>
<h3 id="5、站点配置文件–添加搜索功能"><a href="#5、站点配置文件–添加搜索功能" class="headerlink" title="5、站点配置文件–添加搜索功能"></a>5、站点配置文件–添加搜索功能</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">在Blog中右键git bush here执行以下代码：</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202920.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在站点配置文件任意位置添加如下代码：</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226203014.png" alt="Image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在主题配置文件中修改以下内容</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226203036.png" alt="Image"></p>
<h3 id="6、站点配置文件–设置字数统计和预计阅读时长"><a href="#6、站点配置文件–设置字数统计和预计阅读时长" class="headerlink" title="6、站点配置文件–设置字数统计和预计阅读时长"></a>6、站点配置文件–设置字数统计和预计阅读时长</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">在Blog中右键git bush here执行以下代码：</span><br><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226203349.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">打开站点配置文件，任意位置添加如下代码：</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">打开主题配置文件，任意位置添加如下代码：</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure>





<h3 id="7、主题配置文件–修改hexo主题样式"><a href="#7、主题配置文件–修改hexo主题样式" class="headerlink" title="7、主题配置文件–修改hexo主题样式"></a>7、主题配置文件–修改hexo主题样式</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ctrl+F找到Schemes，将Gemini前面的#</span> <span class="string">号去掉</span></span><br><span class="line"><span class="comment">#Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226201728.png" alt="Image"></p>
<h3 id="8、主题配置文件–增加标签页和分类页以及关于页"><a href="#8、主题配置文件–增加标签页和分类页以及关于页" class="headerlink" title="8、主题配置文件–增加标签页和分类页以及关于页"></a>8、主题配置文件–增加标签页和分类页以及关于页</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202059.png" alt="Image"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">在Blog中右键git bush here，输入以下命令：</span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;about&quot;</span>        #关于页</span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;tags&quot;</span>         #标签页</span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;categories&quot;</span>   #分类页</span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;archives&quot;</span>     #归档页</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202136.png" alt="Image"></p>
<p><strong>打开Blog中source，可以看见如下文件夹已经生成了</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202212.png" alt="Image"></p>
<p><strong>修改上面四个文件夹中各自的.md结尾的文件</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226202302.png" alt="image-20211226202302475"></p>
<h3 id="9、主题配置文件–添加文章版权声明"><a href="#9、主题配置文件–添加文章版权声明" class="headerlink" title="9、主题配置文件–添加文章版权声明"></a>9、主题配置文件–添加文章版权声明</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">主题配置文件中设置 <span class="literal">true</span>：</span><br><span class="line"><span class="attr">creative_commons</span>:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  <span class="attr">sidebar</span>: <span class="literal">false</span></span><br><span class="line">  <span class="attr">post</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">language</span>:</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204053.png" alt="Image"></p>
<h3 id="10、主题配置文件–设置左上角或又上角github图标"><a href="#10、主题配置文件–设置左上角或又上角github图标" class="headerlink" title="10、主题配置文件–设置左上角或又上角github图标"></a>10、主题配置文件–设置左上角或又上角github图标</h3><p>复制自己喜欢的github图标代码<a href="https://tholman.com/github-corners/">https://tholman.com/github-corners/</a></p>
<p>将上面复制的代码，复制到下图位置：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204205.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204230.png" alt="Image"></p>
<p>修改github地址：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204236.png" alt="Image"></p>
<h3 id="11、主题配置文件–添加图片放大预览功能"><a href="#11、主题配置文件–添加图片放大预览功能" class="headerlink" title="11、主题配置文件–添加图片放大预览功能"></a>11、主题配置文件–添加图片放大预览功能</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204257.png" alt="Image"></p>
<h3 id="12、主题配置文件–点击出现桃心效果"><a href="#12、主题配置文件–点击出现桃心效果" class="headerlink" title="12、主题配置文件–点击出现桃心效果"></a>12、主题配置文件–点击出现桃心效果</h3><p><strong>在next/source/js/新建clicklove.js，添加如下内容：</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<p><strong>修改layout.swig。在next /layout/_layout.swig文件末尾添加：</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="13、主题配置文件–设置博客图像和图标"><a href="#13、主题配置文件–设置博客图像和图标" class="headerlink" title="13、主题配置文件–设置博客图像和图标"></a>13、主题配置文件–设置博客图像和图标</h3><p><strong>将所需要设置的头像和图标放入到hexo/source/images文件夹下：</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204557.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204617.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204623.png" alt="Image"></p>
<h3 id="14、主题配置文件–开启文章的打赏功能"><a href="#14、主题配置文件–开启文章的打赏功能" class="headerlink" title="14、主题配置文件–开启文章的打赏功能"></a>14、主题配置文件–开启文章的打赏功能</h3><p><strong>准备支付宝和卫星的收款码，保存到下图中：</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204717.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204723.png" alt="Image"></p>
<h3 id="15、主题配置文件–启用侧边栏社交链接，启用友情链接"><a href="#15、主题配置文件–启用侧边栏社交链接，启用友情链接" class="headerlink" title="15、主题配置文件–启用侧边栏社交链接，启用友情链接"></a>15、主题配置文件–启用侧边栏社交链接，启用友情链接</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204750.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204750.png" alt="Image"></p>
<h3 id="16、主题配置文件–设置标签云特效"><a href="#16、主题配置文件–设置标签云特效" class="headerlink" title="16、主题配置文件–设置标签云特效"></a>16、主题配置文件–设置标签云特效</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">安装hexo-tag-cloud插件</span><br><span class="line">在Blog中右键git bush here执行以下代码：</span><br><span class="line">npm install hexo-tag-cloud@^<span class="number">2.0</span>.* --save</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226204945.png" alt="Image"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">查看标签云是否有效果，如果没有效果，swig用户还需要在主题文件夹找到文件 theme/next/layout/_macro/sidebar.swig, 然后在back2top.sidebar上方添加如下代码：</span><br><span class="line"></span><br><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/tagcloud.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/tagcanvas.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span>Tag Cloud<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">id</span>=<span class="string">&quot;resCanvas&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width=100%&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205115.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">然后在主题配置文件中添加如下配置：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo-tag-cloud</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">    <span class="attr">textColor:</span> <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">    <span class="attr">textHeight:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">    <span class="attr">maxSpeed:</span> <span class="number">0.1</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205200.png" alt="Image"></p>
<h3 id="17、主题配置文件–添加回到顶部按钮"><a href="#17、主题配置文件–添加回到顶部按钮" class="headerlink" title="17、主题配置文件–添加回到顶部按钮"></a>17、主题配置文件–添加回到顶部按钮</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205224.png" alt="Image"></p>
<h3 id="18、主题配置文件–设置加载的效果"><a href="#18、主题配置文件–设置加载的效果" class="headerlink" title="18、主题配置文件–设置加载的效果"></a>18、主题配置文件–设置加载的效果</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205252.png" alt="Image"></p>
<h3 id="19、主题配置文件–图片懒加载模式"><a href="#19、主题配置文件–图片懒加载模式" class="headerlink" title="19、主题配置文件–图片懒加载模式"></a>19、主题配置文件–图片懒加载模式</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在主题配置文件中修改lazyload为true</span></span><br><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205338.png" alt="Image"></p>
<h3 id="20、主题配置文件–隐藏底部的强力驱动"><a href="#20、主题配置文件–隐藏底部的强力驱动" class="headerlink" title="20、主题配置文件–隐藏底部的强力驱动"></a>20、主题配置文件–隐藏底部的强力驱动</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205405.png" alt="Image"></p>
<h3 id="21、主题配置文件–设置代码块复制和代码高亮"><a href="#21、主题配置文件–设置代码块复制和代码高亮" class="headerlink" title="21、主题配置文件–设置代码块复制和代码高亮"></a>21、主题配置文件–设置代码块复制和代码高亮</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">next主题配置文件 中修改 codeblock 选项。</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205522.png" alt="Image"></p>
<h3 id="22、主题配置文件–修改文章底部tag图标"><a href="#22、主题配置文件–修改文章底部tag图标" class="headerlink" title="22、主题配置文件–修改文章底部tag图标"></a>22、主题配置文件–修改文章底部tag图标</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">next配置文件中将tag_icon:false改成true</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205559.png" alt="Image"></p>
<h3 id="23、主题配置文件–修改文章内链接文本样式"><a href="#23、主题配置文件–修改文章内链接文本样式" class="headerlink" title="23、主题配置文件–修改文章内链接文本样式"></a>23、主题配置文件–修改文章内链接文本样式</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">打开文件</span> <span class="string">themes/next/source/css/_common/components/post/post.styl，在末尾添加：</span></span><br><span class="line"></span><br><span class="line"><span class="string">.post-body</span> <span class="string">p</span> <span class="string">a</span> &#123;</span><br><span class="line">  <span class="attr">color:</span> <span class="comment">#0593d3;</span></span><br><span class="line">  <span class="attr">border-bottom:</span> <span class="string">none;</span></span><br><span class="line">  <span class="attr">border-bottom:</span> <span class="string">1px</span> <span class="string">solid</span> <span class="comment">#0593d3;</span></span><br><span class="line">  <span class="string">&amp;:hover</span> &#123;</span><br><span class="line">    <span class="attr">color:</span> <span class="comment">#fc6423;</span></span><br><span class="line">    <span class="attr">border-bottom:</span> <span class="string">none;</span></span><br><span class="line">    <span class="attr">border-bottom:</span> <span class="string">1px</span> <span class="string">solid</span> <span class="comment">#fc6423;</span></span><br><span class="line">  &#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205903.png" alt="Image"></p>
<h3 id="24、主题配置文件–添加不蒜子统计功能"><a href="#24、主题配置文件–添加不蒜子统计功能" class="headerlink" title="24、主题配置文件–添加不蒜子统计功能"></a>24、主题配置文件–添加不蒜子统计功能</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210152.png" alt="Image"></p>
<h3 id="25、主题配置文件–新建一篇文章"><a href="#25、主题配置文件–新建一篇文章" class="headerlink" title="25、主题配置文件–新建一篇文章"></a>25、主题配置文件–新建一篇文章</h3><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210306.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210518.png" alt="Image"></p>
<h3 id="26、主题配置文件–设置post文章模板"><a href="#26、主题配置文件–设置post文章模板" class="headerlink" title="26、主题配置文件–设置post文章模板"></a>26、主题配置文件–设置post文章模板</h3><p>新建一片文章，会发现头部只展示了title和date以及tags，我们可以修改post文章模板</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210627.png" alt="Image"></p>
<p>可以修改为如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210516.png" alt="image-20211226210516310"></p>
<p>多样方式可查看以下内容：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210608.png" alt="Image"></p>
<h3 id="27、主题配置文件–给文章添加阴影【暂时没有效果】"><a href="#27、主题配置文件–给文章添加阴影【暂时没有效果】" class="headerlink" title="27、主题配置文件–给文章添加阴影【暂时没有效果】"></a>27、主题配置文件–给文章添加阴影【暂时没有效果】</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开 /themes/next/source/css/ _common\components\post下的post.styl文件</span><br><span class="line">找到.post_block</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205753.png" alt="Image"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">主页文章添加阴影效果</span></span><br><span class="line"><span class="string">.post_block</span> &#123;</span><br><span class="line">   <span class="attr">opacity:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">   <span class="attr">margin-top:</span> <span class="string">60px;</span></span><br><span class="line">   <span class="attr">margin-bottom:</span> <span class="string">60px;</span></span><br><span class="line">   <span class="attr">padding:</span> <span class="string">25px;</span></span><br><span class="line">   <span class="string">-webkit-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">   <span class="string">-moz-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205812.png" alt="Image"></p>
<h3 id="28、主题配置文件–文章末尾添加文章结束标记【暂时没有效果】"><a href="#28、主题配置文件–文章末尾添加文章结束标记【暂时没有效果】" class="headerlink" title="28、主题配置文件–文章末尾添加文章结束标记【暂时没有效果】"></a>28、主题配置文件–文章末尾添加文章结束标记【暂时没有效果】</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">在主题/layout/_macro 下新建 passage-end-tag.swig 文件，并添加以下代码：</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color:#555;font-size:14px;&quot;</span>&gt;</span></span><br><span class="line">        -------------本文结束 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-heart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 感谢阅读-------------</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226205956.png" alt="Image"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">打开 /themes/next/layout/_macro/post.swig 文件，在 END POST BODY 后面引入 passage-end-tag.swig，如下:</span><br><span class="line"></span><br><span class="line">    &#123;#####################&#125;</span><br><span class="line">    &#123;### END POST BODY ###&#125;</span><br><span class="line">    &#123;#####################&#125;</span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if theme.passage_end_tag.enable and not is_index %&#125;</span><br><span class="line">    &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210041.png" alt="Image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在主题配置文件末尾添加以下配置：</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226210111.png" alt="Image"></p>
]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客二</title>
    <url>/2021/12/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%BA%8C/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226184541.jpeg" alt="img"></p>
<h1 id="安装hexo，并将hexo部署到GitHub"><a href="#安装hexo，并将hexo部署到GitHub" class="headerlink" title="安装hexo，并将hexo部署到GitHub"></a>安装hexo，并将hexo部署到GitHub</h1><span id="more"></span>

<p>[toc]</p>
<h1 id="一、安装hexo"><a href="#一、安装hexo" class="headerlink" title="一、安装hexo"></a>一、安装hexo</h1><h2 id="1-1、安装hexo"><a href="#1-1、安装hexo" class="headerlink" title="1.1、安装hexo"></a>1.1、安装hexo</h2><p><strong>1、任意位置右键git bush here，输入以下命令</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226194501.png" alt="Image"></p>
<p><strong>如果有如下报错：说明你之前安装过，去对应的目录下删除</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226194544.png" alt="Image"></p>
<p><strong>删除下面两个文件夹：</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226194552.png" alt="Image"></p>
<p><strong>然后重新输入上面的命令</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226194716.png" alt="Image"></p>
<p><strong>表示安装成功</strong></p>
<h2 id="1-2、初始化hexo"><a href="#1-2、初始化hexo" class="headerlink" title="1.2、初始化hexo"></a>1.2、初始化hexo</h2><p><strong>1、新建一个文件放置博客</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226194010.png" alt="image-20211226194010006"></p>
<p>输入命令：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195016.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195024.png" alt="Image"></p>
<p><strong>此时在你的Blog文件夹中就可以看到如下内容</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195049.png" alt="Image"></p>
<h2 id="1-3、启动本地服务器查看"><a href="#1-3、启动本地服务器查看" class="headerlink" title="1.3、启动本地服务器查看"></a>1.3、启动本地服务器查看</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">在Blog文件家中右键 git bush here</span><br><span class="line">输入：</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195240.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195305.png" alt="Image"></p>
<p><strong>访问<a href="http://localhost:4000/">http://localhost:4000</a></strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195406.png" alt="Image"></p>
<h1 id="二、将hexo部署到github"><a href="#二、将hexo部署到github" class="headerlink" title="二、将hexo部署到github"></a>二、将hexo部署到github</h1><h2 id="2-1、登录github，创建一个仓库"><a href="#2-1、登录github，创建一个仓库" class="headerlink" title="2.1、登录github，创建一个仓库"></a>2.1、登录github，创建一个仓库</h2><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195539.png" alt="Image"></p>
<h2 id="2-2、设置github-Pages"><a href="#2-2、设置github-Pages" class="headerlink" title="2.2、设置github Pages"></a>2.2、设置github Pages</h2><p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195549.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195603.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195613.png" alt="Image"></p>
<h2 id="2-3、添加SSH-key到github"><a href="#2-3、添加SSH-key到github" class="headerlink" title="2.3、添加SSH key到github"></a>2.3、添加SSH key到github</h2><p><strong>删除原来的.ssh文件夹中用不到的SSH key</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195855.png" alt="Image"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Blog中右键git bush here输入以下命令</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_emial@examle.com&quot;</span> 生成新的ssh key，邮箱填写你github的邮箱</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195935.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226195944.png" alt="Image"></p>
<p><strong>进入github的全局setting中</strong></p>
<img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200014.png" alt="Image" style="zoom: 80%;" />

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200021.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200029.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200043.png" alt="Image"></p>
<h2 id="2-4、修改站点配置文件"><a href="#2-4、修改站点配置文件" class="headerlink" title="2.4、修改站点配置文件"></a>2.4、修改站点配置文件</h2><p><font color='red'><strong>以后Blog文件夹中的_config.yml文件统称为：站点配置文件</strong></font></p>
<p><font color='red'><strong>以后next文件夹中的_config.yml文件统称为：主题配置文件</strong></font></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">在站点配置文件的最后，修改以下内容：</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:codefishyyf/codefishyyf.github.io.git</span> <span class="comment"># 这里的网址填你自己的</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200356.png" alt="Image"></p>
<p>修改完成之后，记得保存。</p>
<p><strong>在Blog中右键git bush here输入以下命令，添加一个扩展命令</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200507.png" alt="Image"></p>
<h2 id="2-5、查看hexo是否部署到github"><a href="#2-5、查看hexo是否部署到github" class="headerlink" title="2.5、查看hexo是否部署到github"></a>2.5、查看hexo是否部署到github</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Blog中右键git bush here输入以下命令：</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p><strong>可以看到master或main分支中已经部署了新文件</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200627.png" alt="Image"></p>
<p>codefishyyf.github.io可以访问自己的博客啦【你自己的博客访问地址】</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226200654.png" alt="Image"></p>
]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客五</title>
    <url>/2021/12/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%BA%94/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226184204.jpeg" alt="img"></p>
<h1 id="Typora使用"><a href="#Typora使用" class="headerlink" title="Typora使用"></a>Typora使用</h1><span id="more"></span>

<p>[toc]</p>
<h1 id="一、对文字的特殊标注"><a href="#一、对文字的特殊标注" class="headerlink" title="一、对文字的特殊标注"></a>一、对文字的特殊标注</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一阶标题  或者快捷键Ctrl+1</span></span><br><span class="line"><span class="section">## 二阶标题 或者快捷键Ctrl+2</span></span><br><span class="line"><span class="section">### 三阶标题    或者快捷键Ctrl+3</span></span><br><span class="line"><span class="section">#### 四阶标题   或者快捷键Ctrl+4</span></span><br><span class="line"><span class="section">##### 五阶标题  或者快捷键Ctrl+5</span></span><br><span class="line"><span class="section">###### 六阶标题 或者快捷键Ctrl+6</span></span><br></pre></td></tr></table></figure>

<h2 id="2-下划线"><a href="#2-下划线" class="headerlink" title="2.下划线"></a>2.下划线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线的内容<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span> 或按快捷键Ctrl+U</span><br></pre></td></tr></table></figure>

<h2 id="3-字体加粗"><a href="#3-字体加粗" class="headerlink" title="3.字体加粗"></a>3.字体加粗</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**加粗内容**</span>    或按快捷键Ctrl+B</span><br></pre></td></tr></table></figure>

<h2 id="4-斜体"><a href="#4-斜体" class="headerlink" title="4.斜体"></a>4.斜体</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*倾斜内容*</span>  或按快捷键Ctrl+I</span><br></pre></td></tr></table></figure>

<h2 id="5-删除线"><a href="#5-删除线" class="headerlink" title="5.删除线"></a>5.删除线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~删除线的内容~~  或按快捷键Alt+Shift+5</span><br></pre></td></tr></table></figure>

<h2 id="6-文字高亮"><a href="#6-文字高亮" class="headerlink" title="6.文字高亮"></a>6.文字高亮</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">==我是最重要的==</span><br></pre></td></tr></table></figure>

<h2 id="7-角标"><a href="#7-角标" class="headerlink" title="7.角标"></a>7.角标</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">x^2^    H~2~O</span><br></pre></td></tr></table></figure>

<h2 id="8-文本居中"><a href="#8-文本居中" class="headerlink" title="8.文本居中"></a>8.文本居中</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span>这是要居中的文本内容<span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="9-list"><a href="#9-list" class="headerlink" title="9.list"></a>9.list</h2><h3 id="1-有序"><a href="#1-有序" class="headerlink" title="1.有序"></a>1.有序</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">数字+英文小数点(.)+空格</span><br></pre></td></tr></table></figure>

<p>1.策划目标<br>2.战前准备<br>3.开始行动</p>
<h3 id="2-无序"><a href="#2-无序" class="headerlink" title="2.无序"></a>2.无序</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">+</span> 、- 、<span class="emphasis">* 创建无序列，任意数字开始+空格创建有序列表</span></span><br></pre></td></tr></table></figure>

<p>猪<br>兔<br>马</p>
<h2 id="10-Todolist"><a href="#10-Todolist" class="headerlink" title="10.Todolist"></a>10.Todolist</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 参加会议</span><br><span class="line"><span class="bullet">-</span> [x] 中超足球赛</span><br></pre></td></tr></table></figure>

<p>[ ] 参加会议<br>[x] 中超足球赛</p>
<h2 id="11-Table"><a href="#11-Table" class="headerlink" title="11.Table"></a>11.Table</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">快捷键Ctrl+T弹出对话框</span><br></pre></td></tr></table></figure>

<h2 id="12-分割线"><a href="#12-分割线" class="headerlink" title="12.分割线"></a>12.分割线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*+回车  </span></span></span><br><span class="line"><span class="emphasis"><span class="strong">---+回车  </span></span></span><br></pre></td></tr></table></figure>

<h1 id="二、插入"><a href="#二、插入" class="headerlink" title="二、插入"></a>二、插入</h1><h2 id="1-图片"><a href="#1-图片" class="headerlink" title="1.图片"></a>1.图片</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片内容</span>](<span class="link">http://t10.baidu.com/it/u=1069603383,3074552113&amp;fm=170&amp;s=771B15C75C12D8D61C3C69FB0300501F&amp;w=640&amp;h=426&amp;img.JPEG</span>)</span><br><span class="line"> 也可使用快捷键Ctrl+K</span><br><span class="line">PS：也可将图片直接拖拽进来，自动生成链接</span><br></pre></td></tr></table></figure>

<h2 id="2-链接"><a href="#2-链接" class="headerlink" title="2.链接"></a>2.链接</h2><p><em>(PS：按住Ctrl点击链接可直接打开。)</em></p>
<h3 id="1-内行式"><a href="#1-内行式" class="headerlink" title="1.内行式"></a>1.内行式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度一下，你就知道</span>](<span class="link">https://www.baidu.com/</span>)</span><br></pre></td></tr></table></figure>

<h3 id="2-参考式"><a href="#2-参考式" class="headerlink" title="2.参考式"></a>2.参考式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度一下，你就知道</span>][<span class="symbol"></span>]https://www.baidu.com/          # 第二个括号内可任意填写(不显)</span><br><span class="line"></span><br><span class="line">[<span class="string">百度一下，你就知道</span>][<span class="symbol"></span>]https://www.baidu.com/</span><br></pre></td></tr></table></figure>

<h3 id="3-快速链接"><a href="#3-快速链接" class="headerlink" title="3.快速链接"></a>3.快速链接</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml">&lt;http://www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-数学公式（简）"><a href="#3-数学公式（简）" class="headerlink" title="3.数学公式（简）"></a>3.数学公式（简）</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染。</span><br><span class="line"><span class="emphasis">*1.行内公式(inline math)，可以在偏好设置中单独打开，由一个美元符号将公式围起来；name=\prod \frac&#123;1&#125;&#123;i^2&#125;$</span></span><br><span class="line"><span class="emphasis">*</span>2.行外公式，直接按Ctrl+Shift+M；(双$+回车也可做到)</span><br><span class="line">注：上标和下标可以使用数学表达式来获取</span><br></pre></td></tr></table></figure>



<p>name=∏1i2$(1)(1)name=∏1i2$</p>
<h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&gt;+空格    或按快捷键Ctrl+Shift+Q</span><br></pre></td></tr></table></figure>

<h2 id="5-注释"><a href="#5-注释" class="headerlink" title="5.注释"></a>5.注释</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要添加注释的文字</span><br><span class="line">这是我们的标号[^1]</span><br><span class="line">[^1]:标号的含义</span><br></pre></td></tr></table></figure>

<p>这是我们的标号[<a href="https://www.cnblogs.com/ChenChunChang/p/15331526.html#fn1">1]</a></p>
<h2 id="6-表情"><a href="#6-表情" class="headerlink" title="6.表情"></a>6.表情</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">表情</span><br></pre></td></tr></table></figure>

<h2 id="7-单词"><a href="#7-单词" class="headerlink" title="7.单词"></a>7.单词</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:单词:</span><br></pre></td></tr></table></figure>

<h2 id="8-目录"><a href="#8-目录" class="headerlink" title="8.目录"></a>8.目录</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## </span></span><br><span class="line"></span><br><span class="line">[TOC]</span><br></pre></td></tr></table></figure>

<h1 id="三、Typora快捷键整合"><a href="#三、Typora快捷键整合" class="headerlink" title="三、Typora快捷键整合"></a>三、Typora快捷键整合</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Ctrl+1  一阶标题    </span><br><span class="line">Ctrl+2  二阶标题    </span><br><span class="line">Ctrl+3  三阶标题    </span><br><span class="line">Ctrl+4  四阶标题   </span><br><span class="line">Ctrl+5  五阶标题    </span><br><span class="line">Ctrl+6  六阶标题 </span><br><span class="line">Ctrl+B  字体加粗</span><br><span class="line">Ctrl+T  创建表格</span><br><span class="line">Ctrl+I  字体倾斜</span><br><span class="line">Ctrl+U  下划线</span><br><span class="line">Ctrl+Home   返回Typora顶部</span><br><span class="line">Ctrl+End    返回Typora底部</span><br><span class="line">Ctrl+L  选中某句话   </span><br><span class="line">Ctrl+K  创建超链接</span><br><span class="line">Ctrl+D  选中某个单词  </span><br><span class="line">Ctrl+F  搜索</span><br><span class="line">Ctrl+E  选中相同格式的文字   </span><br><span class="line">Ctrl+H  搜索并替换</span><br><span class="line">Alt+Shift+5 删除线 </span><br><span class="line">Ctrl+Shift+I    插入图片</span><br><span class="line">Ctrl+Shift+M    公式块 </span><br><span class="line">Ctrl+Shift+Q    引用</span><br><span class="line">Ctrl+Shift+k    代码块</span><br><span class="line">注：一些实体符号需要在实体符号之前加”\”才能够显示</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>java练习题</title>
    <url>/2022/01/10/java%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="数组练习题"><a href="#数组练习题" class="headerlink" title="数组练习题"></a>数组练习题</h1><p>题1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">升景坊单间短期出租4个月，550元/月空调、卫生间、厨房齐全。</span></span><br><span class="line"><span class="comment">屋内均是IT行业人事，喜欢安静，所以要求来租者最好是同行或者刚毕业的年轻人，爱干净，安静。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span>[] arr=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span>[] index=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	String tel=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;index.length;i++)&#123;</span><br><span class="line">		tel+=arr[index[i]];</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;联系方式:&quot;</span>+tel);<span class="comment">//18013820100</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>题2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从键盘读入学生成绩，找出最高分，并输出学生成绩等级</span></span><br><span class="line"><span class="comment">1、成绩&gt;=最高分-10  等级为A</span></span><br><span class="line"><span class="comment">2、成绩&gt;=最高分-20  等级为B</span></span><br><span class="line"><span class="comment">3、成绩&gt;=最高分-30  等级为C</span></span><br><span class="line"><span class="comment">4、其余             等级为D</span></span><br><span class="line"><span class="comment">提示：先读入学生人数，根据人数创建int数组，存放学生成绩。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	System.out.print(<span class="string">&quot;请输入学生总数:&quot;</span>);</span><br><span class="line">	<span class="keyword">int</span> peoples = scanner.nextInt();</span><br><span class="line">	System.out.println();</span><br><span class="line">	<span class="keyword">int</span>[] stu = <span class="keyword">new</span> <span class="keyword">int</span>[peoples];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++) &#123;</span><br><span class="line">		stu[i] = ((<span class="keyword">int</span>)( Math.random() * <span class="number">100</span>)) + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (max&lt;stu[i])&#123;</span><br><span class="line">			max=stu[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;最大值为:&quot;</span>+max);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (stu[i]&gt;=max-<span class="number">10</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;学生stu&quot;</span>+i+<span class="string">&quot;成绩为：&quot;</span>+stu[i]+<span class="string">&quot;等级为:A&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (stu[i]&gt;=max-<span class="number">20</span> &amp;&amp; stu[i]&lt;=max-<span class="number">10</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;学生stu&quot;</span>+i+<span class="string">&quot;成绩为：&quot;</span>+stu[i]+<span class="string">&quot;等级为:B&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (stu[i]&gt;=max-<span class="number">30</span> &amp;&amp; stu[i]&lt;=max-<span class="number">20</span> )&#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;学生stu&quot;</span>+i+<span class="string">&quot;成绩为：&quot;</span>+stu[i]+<span class="string">&quot;等级为:C&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;学生stu&quot;</span>+i+<span class="string">&quot;成绩为：&quot;</span>+stu[i]+<span class="string">&quot;等级为:D&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>题3</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、写出以为数组初始化的两种方式</span><br><span class="line"><span class="number">2</span>、写出二维数组初始化的两种方式</span><br><span class="line"><span class="number">3</span>、如何遍历如下的二维数组：<span class="keyword">int</span>[] arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line"><span class="number">4</span>、不同类型的一维数组元素的默认初始化值各是多少</span><br><span class="line"><span class="number">5</span>、一维数组的内存解析</span><br><span class="line">    String[] strs=<span class="keyword">new</span> String[<span class="number">5</span>];</span><br><span class="line">	strs[<span class="number">2</span>]=<span class="string">&quot;TOM&quot;</span>;</span><br><span class="line">	strs=<span class="keyword">new</span> String[<span class="number">3</span>];</span><br></pre></td></tr></table></figure>

<p>题4</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110225436.png" alt="image-20220110225436503"></p>
<p>题5</p>
<p>​    <img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110225509.png"></p>
<p>题6</p>
<p>​    <img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110225545.png" alt="image-20220110225545278"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110225617.png" alt="image-20220110225617133"></p>
<h1 id="数组中涉及的常见算法练习题"><a href="#数组中涉及的常见算法练习题" class="headerlink" title="数组中涉及的常见算法练习题"></a>数组中涉及的常见算法练习题</h1>]]></content>
  </entry>
  <entry>
    <title>hexo搭建博客四</title>
    <url>/2021/12/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9B%9B/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226184422.png"></p>
<h1 id="设置自己的域名、添加valine评论、设置PicGo-github图床"><a href="#设置自己的域名、添加valine评论、设置PicGo-github图床" class="headerlink" title="设置自己的域名、添加valine评论、设置PicGo+github图床"></a>设置自己的域名、添加valine评论、设置PicGo+github图床</h1><span id="more"></span>

<p>[toc]</p>
<h1 id="一、主题配置文件–添加自定义404页面"><a href="#一、主题配置文件–添加自定义404页面" class="headerlink" title="一、主题配置文件–添加自定义404页面"></a>一、主题配置文件–添加自定义404页面</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在blog下右键git bush here,输入以下内容：</span><br><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212609.png" alt="Image"></p>
<p>修改404页面中的index.md头部信息：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212646.png" alt="Image"></p>
<p><strong>在404免费模板中复制自己想要的页面代码<a href="https://404.life/">https://404.life/</a></strong></p>
<p><strong>css和js放到index.md同级目录下，html放到index.md文件中。</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212750.png" alt="Image"></p>
<p><strong>修改html中css和js的路径</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212805.png" alt="Image"></p>
<p><strong>修改html中返回首页的地址</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212818.png" alt="Image"></p>
<h1 id="二、主题配置文件–设置valine评论"><a href="#二、主题配置文件–设置valine评论" class="headerlink" title="二、主题配置文件–设置valine评论"></a>二、主题配置文件–设置valine评论</h1><p>进入valine官网：<a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></p>
<p>注册登录</p>
<p>点击控制台–创建应用</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212905.png" alt="Image"></p>
<p>点击设置–应用凭证</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212929.png" alt="Image"></p>
<p>在主题配置文件中找到valine：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212941.png" alt="Image"></p>
<p>修改之后就是：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226212954.png" alt="Image"></p>
<p>comments设置如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213007.png" alt="Image"></p>
<p>设置valine的头像<br>        可以在配置文件中找到</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213035.png" alt="Image"></p>
<p>将mm替换成monsterid</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213055.png" alt="Image"></p>
<h1 id="三、主题配置文件–为博客设置自己的域名"><a href="#三、主题配置文件–为博客设置自己的域名" class="headerlink" title="三、主题配置文件–为博客设置自己的域名"></a>三、主题配置文件–为博客设置自己的域名</h1><p>1、博客申请，我用的是阿里云买的一个域名，以.top为后缀的域名codefishyyf.top，比较便宜</p>
<p>2、DNS修改  在阿里云的控制台中，打开域名控制台–》基本管理–》DNS修改-默认的域名DNS使用的是万网DNS：<a href="http://dns29.hichina.com/">dns29.hichina.com</a>和<a href="http://dns30.hichina.com/">dns30.hichina.com</a></p>
<p>3、域名添加DNS解析：  github官网提供了两个主机IP地址：192.30.252.153和192.30.252.154，将这两个作为主机地址，给域名的DNS解析添加两个A记录，然后再添加一个CNAME记录，主机地址填的使我们原来用来访问github博客的地址：我的是codefishyyf.github.io,添加完成后如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213155.png" alt="Image"></p>
<p>4、如果出现了不是私密连接的，或访问404的问题，那就在本地win+R，ping codefishyyf.github.io</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213213.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213224.png" alt="Image"></p>
<p>5、在Blog文件的source目录下面创建一个文件，取名叫CNAME（无后缀）里面保存的就是codefishyyf.top</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213237.png" alt="Image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Blog中右键git bush here输入以下命令：</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>6、域名绑定</p>
<p>打开github在博客仓库中的setting中设置Custom domain内容为我们的域名</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213412.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213414.png" alt="Image"></p>
<p>7、在站点配置文件中找到url设置为：url: <a href="https://codefishyyf.github.io/">https://codefishyyf.github.io</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213434.png" alt="Image"></p>
<p>8、通过域名访问博客</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213455.png" alt="Image"></p>
<h1 id="四、主题配置文件–typora-github-picgo解决图片问题"><a href="#四、主题配置文件–typora-github-picgo解决图片问题" class="headerlink" title="四、主题配置文件–typora+github+picgo解决图片问题"></a>四、主题配置文件–typora+github+picgo解决图片问题</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">typora+picgo+github</span><br><span class="line">typora版本：0.10.11（beta）</span><br><span class="line">picgo版本：2.3.0-beta.3</span><br></pre></td></tr></table></figure>

<p>1、在github中创建一个新的仓库比如：cloudimg</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213547.png" alt="Image"></p>
<p>2、创建token并复制保存</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213605.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213616.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213630.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213646.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213646.png" alt="Image"></p>
<p>3、PicGo客户端配置双击安装picgo</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213657.png" alt="Image"></p>
<p>然后关于上传的快捷键设置。默认的是 Mac 按键，推荐改成 Ctrl + alt +c。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213720.png" alt="Image"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20211226213730.png" alt="Image"></p>
]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>数组</title>
    <url>/2022/01/07/%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="一、数组的概述"><a href="#一、数组的概述" class="headerlink" title="一、数组的概述"></a>一、数组的概述</h1><h2 id="1-1、数组"><a href="#1-1、数组" class="headerlink" title="1.1、数组"></a>1.1、数组</h2><p>是多个 <strong>相同类型数据</strong>按照 <strong>一定顺序排列</strong>的集合，并使用 <strong>一个名字命名，</strong>通过 <strong>编号</strong>的方式对这些数据进行统一的管理。</p>
<h2 id="1-2、数组常见的概念"><a href="#1-2、数组常见的概念" class="headerlink" title="1.2、数组常见的概念"></a>1.2、数组常见的概念</h2><ul>
<li>数组名：使用一个名字命名</li>
<li>下标（或索引）：编号</li>
<li>元素：相同类型的数据</li>
<li>数组的长度：元素的个数</li>
</ul>
<h2 id="1-3、数组本身是引用数据类型"><a href="#1-3、数组本身是引用数据类型" class="headerlink" title="1.3、数组本身是引用数据类型"></a>1.3、数组本身是引用数据类型</h2><p>数组本身是<strong>引用数据类型</strong>，而数组中的元素可以是<strong>任何数据类型</strong>，包括基本数据类型和引用数据类型。</p>
<h2 id="1-4、数组在内存中"><a href="#1-4、数组在内存中" class="headerlink" title="1.4、数组在内存中"></a>1.4、数组在内存中</h2><p>创建数组对象会在内存中开辟一整块 <strong>连续的空间，</strong>而数组名中引用的是这块连续空间的首地址。</p>
<h2 id="1-5、数组的长度"><a href="#1-5、数组的长度" class="headerlink" title="1.5、数组的长度"></a>1.5、数组的长度</h2><p>数组的 <strong>长度一点确定，就不能修改</strong>。</p>
<h2 id="1-6、数组的分类"><a href="#1-6、数组的分类" class="headerlink" title="1.6、数组的分类"></a>1.6、数组的分类</h2><ul>
<li>按照维度分类<ul>
<li>一维数组，二维数组、三维数组…</li>
</ul>
</li>
<li>按照元素的数据类型分类<ul>
<li>基本数据类型元素的数组、引用数据类型元素的数组（即对象数组）</li>
</ul>
</li>
</ul>
<h1 id="二、一维数组的使用"><a href="#二、一维数组的使用" class="headerlink" title="二、一维数组的使用"></a>二、一维数组的使用</h1><h2 id="2-1、一维数组的声明和初始化"><a href="#2-1、一维数组的声明和初始化" class="headerlink" title="2.1、一维数组的声明和初始化"></a>2.1、一维数组的声明和初始化</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codefish.array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codefishyyf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsProject</span>: java</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsPackage</span>: com.codefish.array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-01-09 22:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 一维数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//一维数组的声明和初始化</span></span><br><span class="line">		<span class="keyword">int</span> num;<span class="comment">//声明</span></span><br><span class="line">		num=<span class="number">10</span>;<span class="comment">//初始化</span></span><br><span class="line">		<span class="keyword">int</span> id =<span class="number">1001</span>;<span class="comment">//声明+初始化</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//静态初始化:数组的初始化和数组元素的赋值操作同时进行</span></span><br><span class="line">		<span class="keyword">int</span>[] ids;<span class="comment">//声明</span></span><br><span class="line">		ids=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>&#125;;<span class="comment">//初始化</span></span><br><span class="line">		<span class="keyword">int</span>[] ids1=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//声明+初始化</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//动态初始化:数组的初始化和数组元素的赋值操作分开进行</span></span><br><span class="line">		String[] names;<span class="comment">//声明</span></span><br><span class="line">		names=<span class="keyword">new</span> String[<span class="number">5</span>];<span class="comment">//初始化</span></span><br><span class="line">		String[] name=<span class="keyword">new</span> String[<span class="number">5</span>];<span class="comment">//声明+初始化</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-2、如何调用数组的指定位置的元素"><a href="#2-2、如何调用数组的指定位置的元素" class="headerlink" title="2.2、如何调用数组的指定位置的元素"></a>2.2、如何调用数组的指定位置的元素</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codefish.array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codefishyyf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsProject</span>: java</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsPackage</span>: com.codefish.array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-01-09 22:43</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 数组元素的赋值和调用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraysTest1</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String[] names=<span class="keyword">new</span> String[<span class="number">5</span>];</span><br><span class="line">		<span class="comment">//给数组指定元素赋值,通过索引的方式调用</span></span><br><span class="line">        <span class="comment">//数组的索引从0开始，到数组长度-1结束</span></span><br><span class="line">		names[<span class="number">0</span>]=<span class="string">&quot;张三&quot;</span>;</span><br><span class="line">		names[<span class="number">1</span>]=<span class="string">&quot;李四&quot;</span>;</span><br><span class="line">		names[<span class="number">2</span>]=<span class="string">&quot;王五&quot;</span>;</span><br><span class="line"></span><br><span class="line">		System.out.println(<span class="string">&quot;人名：&quot;</span>+names[<span class="number">0</span>]);<span class="comment">//人名：张三</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-3、如何获取数组的长度"><a href="#2-3、如何获取数组的长度" class="headerlink" title="2.3、如何获取数组的长度"></a>2.3、如何获取数组的长度</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codefish.array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codefishyyf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsProject</span>: java</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsPackage</span>: com.codefish.array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-01-09 22:49</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 如何获取数组的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array2</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String[] arr=<span class="keyword">new</span> String[<span class="number">6</span>];</span><br><span class="line">		<span class="comment">//如何获取数组的长度</span></span><br><span class="line">		<span class="comment">//数组中有一个length属性,可以获取数组的长度</span></span><br><span class="line">		System.out.println(arr.length);<span class="comment">//6</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-4、如何遍历数组"><a href="#2-4、如何遍历数组" class="headerlink" title="2.4、如何遍历数组"></a>2.4、如何遍历数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codefish.array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codefishyyf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsProject</span>: java</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsPackage</span>: com.codefish.array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-01-09 22:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 如何遍历一维数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest3</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String[] names=<span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line">		names[<span class="number">0</span>]=<span class="string">&quot;张三&quot;</span>;</span><br><span class="line">		names[<span class="number">1</span>]=<span class="string">&quot;李四&quot;</span>;</span><br><span class="line">		names[<span class="number">2</span>]=<span class="string">&quot;王五&quot;</span>;</span><br><span class="line">		<span class="comment">//如何遍历数组</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; names.length; i++) &#123;</span><br><span class="line">			System.out.println(names[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-5、数组元素的默认初始化值"><a href="#2-5、数组元素的默认初始化值" class="headerlink" title="2.5、数组元素的默认初始化值"></a>2.5、数组元素的默认初始化值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数组元素默认初始化值：</span><br><span class="line">	<span class="keyword">byte</span> <span class="keyword">short</span> <span class="keyword">int</span> <span class="keyword">long</span> 默认初始化值为<span class="number">0</span></span><br><span class="line">	<span class="keyword">float</span> <span class="keyword">double</span>        默认初始化值为<span class="number">0.0</span></span><br><span class="line">    <span class="keyword">char</span>				默认初始化值为<span class="string">&#x27;0&#x27;</span>,这个<span class="string">&#x27;0&#x27;</span>表示\u0000</span><br><span class="line">    <span class="keyword">boolean</span>				默认初始化值为<span class="keyword">false</span></span><br><span class="line">    引用数据类型			默认初始化值为<span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codefish.array;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codefishyyf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsProject</span>: java</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BelongsPackage</span>: com.codefish.array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-01-09 22:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 数组元素的默认初始化值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest4</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//byte类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">byte</span>[] byteArr=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteArr.length; i++) &#123;</span><br><span class="line">			System.out.println(byteArr[i]);<span class="comment">//0 0 0 0 0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//short类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">short</span>[] shortArr=<span class="keyword">new</span> <span class="keyword">short</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shortArr.length; i++) &#123;</span><br><span class="line">			System.out.println(shortArr[i]);<span class="comment">//0 0 0 0 0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//int类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">int</span>[] intArr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intArr.length; i++) &#123;</span><br><span class="line">			System.out.println(intArr[i]);<span class="comment">//0 0 0 0 0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//long类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">long</span>[] longArr=<span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; longArr.length; i++) &#123;</span><br><span class="line">			System.out.println(longArr[i]);<span class="comment">//0 0 0 0 0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//float类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">float</span>[] floatArr=<span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; floatArr.length; i++) &#123;</span><br><span class="line">			System.out.println(floatArr[i]);<span class="comment">//0.0  0.0  0.0  0.0  0.0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//double类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">double</span>[] doubleArr=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; doubleArr.length; i++) &#123;</span><br><span class="line">			System.out.println(doubleArr[i]);<span class="comment">//0.0  0.0  0.0  0.0  0.0</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//char类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">char</span>[] charArr=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArr.length; i++) &#123;</span><br><span class="line">			System.out.println(charArr[i]);<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">		<span class="comment">//boolean类型数组的默认初始化值</span></span><br><span class="line">		<span class="keyword">boolean</span>[] booleanArr=<span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; booleanArr.length; i++) &#123;</span><br><span class="line">			System.out.println(booleanArr[i]);<span class="comment">//false false false false false</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//String类型数组的默认初始化值</span></span><br><span class="line">		String[] stringArr=<span class="keyword">new</span> String[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringArr.length; i++) &#123;</span><br><span class="line">			System.out.println(stringArr[i]);<span class="comment">//null null null null null</span></span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;******************&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-6、数组的内存解析"><a href="#2-6、数组的内存解析" class="headerlink" title="2.6、数组的内存解析"></a>2.6、数组的内存解析</h2><p><strong>1、基本内存展示如下</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109233323.png"></p>
<p><strong>2、int[] arr=new int[]{1,2,3};数组的内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109233849.png" alt="image-20220109233849553"></p>
<p><strong>3、String[] arr1=new String[4];数组的内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109234321.png" alt="image-20220109234321469"></p>
<p><strong>4、arr1[1]=”刘德华”；arr1[2]=”张学友”；赋值操作的数组的内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109234509.png" alt="image-20220109234509363"></p>
<p><strong>5、arr1=new String[3];数组的内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109235004.png" alt="image-20220109234803062"></p>
<h1 id="三、二维数组的使用"><a href="#三、二维数组的使用" class="headerlink" title="三、二维数组的使用"></a>三、二维数组的使用</h1><p>如果说可以把一维数组当成几何中的线性图形，那么二维数组就相当于是一个表格。对于二维数组的理解，我们可以看成是一维数组array1又作为另一个一维数组array2的元素而存在。其实，从数组底层的运行机制来看，其实没有多维数组。二维数组其实就是一维数组的嵌套。<strong>也就是说一维数组中的元素也是一维数组</strong>。</p>
<h2 id="3-1、二维数组的声明和初始化"><a href="#3-1、二维数组的声明和初始化" class="headerlink" title="3.1、二维数组的声明和初始化"></a>3.1、二维数组的声明和初始化</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//二维数组的声明和初始化</span></span><br><span class="line">	<span class="comment">//静态初始化</span></span><br><span class="line">	<span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//动态初始化1</span></span><br><span class="line">	<span class="keyword">int</span>[][] arr1=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">	<span class="comment">//动态初始化2</span></span><br><span class="line">	<span class="keyword">int</span>[][] arr2=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-2、如何调用数组的指定位置的元素"><a href="#3-2、如何调用数组的指定位置的元素" class="headerlink" title="3.2、如何调用数组的指定位置的元素"></a>3.2、如何调用数组的指定位置的元素</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如何调用二维数组指定位置上的元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span>[][] arr1=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;&#125;;</span><br><span class="line">	<span class="comment">//获取元素</span></span><br><span class="line">	System.out.println(arr1[<span class="number">1</span>][<span class="number">2</span>]);<span class="comment">//4</span></span><br><span class="line">	System.out.println(arr1[<span class="number">3</span>][<span class="number">3</span>]);<span class="comment">//7</span></span><br><span class="line">	<span class="comment">//设置指定位置的元素:设置[3][2]位置的元素为0</span></span><br><span class="line">	System.out.println(arr1[<span class="number">3</span>][<span class="number">2</span>]);</span><br><span class="line">	arr1[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">	System.out.println(arr1[<span class="number">3</span>][<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-3、如何获取数组的长度"><a href="#3-3、如何获取数组的长度" class="headerlink" title="3.3、如何获取数组的长度"></a>3.3、如何获取数组的长度</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取数组的长度</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;,&#123;<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>&#125;,&#123;<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>&#125;&#125;;</span><br><span class="line">	<span class="comment">//获取arr的数组长度</span></span><br><span class="line">	System.out.println(arr.length);<span class="comment">//5</span></span><br><span class="line">	<span class="comment">//获取arr[4]的数组长度</span></span><br><span class="line">	System.out.println(arr[<span class="number">4</span>].length);<span class="comment">//7</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-4、如何遍历数组"><a href="#3-4、如何遍历数组" class="headerlink" title="3.4、如何遍历数组"></a>3.4、如何遍历数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如何遍历数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;,&#123;<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>&#125;,&#123;<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>&#125;&#125;;</span><br><span class="line">	<span class="comment">//遍历arr数组</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(arr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//遍历arr[4]数组</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr[<span class="number">4</span>].length; i++) &#123;</span><br><span class="line">		System.out.println(arr[<span class="number">4</span>][i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-5、数组元素的默认初始化值"><a href="#3-5、数组元素的默认初始化值" class="headerlink" title="3.5、数组元素的默认初始化值"></a>3.5、数组元素的默认初始化值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">总结二维数组元素的默认初始化值：</span><br><span class="line">    针对于初始化方式一：比如：<span class="keyword">byte</span>[][] byteArr=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">		外层元素的初始化值为：地址值</span><br><span class="line">        内层元素的初始化值为：    </span><br><span class="line">                <span class="keyword">byte</span> <span class="keyword">short</span> <span class="keyword">int</span> <span class="keyword">long</span> 默认初始化值为<span class="number">0</span></span><br><span class="line">                <span class="keyword">float</span> <span class="keyword">double</span>        默认初始化值为<span class="number">0.0</span></span><br><span class="line">                <span class="keyword">char</span>				默认初始化值为<span class="string">&#x27;0&#x27;</span>,这个<span class="string">&#x27;0&#x27;</span>表示\u0000</span><br><span class="line">                <span class="keyword">boolean</span>				默认初始化值为<span class="keyword">false</span></span><br><span class="line">                引用数据类型			默认初始化值为<span class="keyword">null</span></span><br><span class="line">    针对于初始化方式二:比如：<span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>][];</span><br><span class="line">		外层元素的初始化值为：<span class="keyword">null</span></span><br><span class="line">        内层元素的初始化值为：不能调用，否则报错。    </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//二维数组的默认初始化值</span></span><br><span class="line"><span class="comment">//规定：二维数组分为外层数组的元素，内存数组的元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//byte short int long float double boolean char String</span></span><br><span class="line">	<span class="keyword">byte</span>[][] byteArr=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteArr.length; i++) &#123;</span><br><span class="line">		System.out.println(byteArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[B@4554617c</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; byteArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(byteArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">short</span>[][] shortArr=<span class="keyword">new</span> <span class="keyword">short</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shortArr.length; i++) &#123;</span><br><span class="line">		System.out.println(shortArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[S@74a14482</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shortArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; shortArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(shortArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">int</span>[][] intArr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intArr.length; i++) &#123;</span><br><span class="line">		System.out.println(intArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[I@1540e19d</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; intArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(intArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">long</span>[][] longArr=<span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; longArr.length; i++) &#123;</span><br><span class="line">		System.out.println(longArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[J@677327b6</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; longArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; longArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(longArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	<span class="comment">// 0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">float</span>[][] floatArr=<span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; floatArr.length; i++) &#123;</span><br><span class="line">		System.out.println(floatArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[D@7f31245a</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; floatArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; floatArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(floatArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">double</span>[][] doubleArr=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; doubleArr.length; i++) &#123;</span><br><span class="line">		System.out.println(doubleArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[F@14ae5a5</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; doubleArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; doubleArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(doubleArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	<span class="comment">// 0.0</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">boolean</span>[][] booleanArr=<span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; booleanArr.length; i++) &#123;</span><br><span class="line">		System.out.println(booleanArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[Z@6d6f6e28</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; booleanArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; booleanArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(booleanArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// false</span></span><br><span class="line">	<span class="comment">// false</span></span><br><span class="line">	<span class="comment">// false</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	<span class="keyword">char</span>[][] charArr=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArr.length; i++) &#123;</span><br><span class="line">		System.out.println(charArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// [Z@6d6f6e28</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; charArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(charArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// \u0000</span></span><br><span class="line">	System.out.println(<span class="string">&quot;***********************&quot;</span>);</span><br><span class="line">	String[][] StringArr=<span class="keyword">new</span> String[<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">	<span class="comment">//外层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; StringArr.length; i++) &#123;</span><br><span class="line">		System.out.println(StringArr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//[Ljava.lang.String;@135fbaa4</span></span><br><span class="line">	<span class="comment">//内层默认初始化值</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; StringArr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; StringArr[i].length; j++) &#123;</span><br><span class="line">			System.out.println(StringArr[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// null</span></span><br><span class="line">	<span class="comment">// null</span></span><br><span class="line">	<span class="comment">// null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-6、数组的内存解析"><a href="#3-6、数组的内存解析" class="headerlink" title="3.6、数组的内存解析"></a>3.6、数组的内存解析</h2><p><strong>1、基本内存展示如下</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109233323.png"></p>
<p> <strong>2、int[ ] [ ] arr1=new int[4] [ ];内存解析</strong> </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110224410.png" alt="image-20220110224401339"></p>
<p><strong>3、arr1[1]=new int[ ]{1,2,3};内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110224459.png" alt="image-20220110224459636"></p>
<p><strong>4、arr1[2]=new int[4];内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110224549.png" alt="image-20220110224549014"></p>
<p><strong>5、arr1[2] [1]=30;内存解析</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220110224624.png" alt="image-20220110224624869"></p>
]]></content>
      <categories>
        <category>javase</category>
      </categories>
      <tags>
        <tag>javase</tag>
      </tags>
  </entry>
  <entry>
    <title>日志实现JUL</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E5%AE%9E%E7%8E%B0JUL/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>日志实现Log4j</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E5%AE%9E%E7%8E%B0Log4j/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>日志实现Log4j2</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E5%AE%9E%E7%8E%B0Log4j2/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>日志实现Logback</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E5%AE%9E%E7%8E%B0Logback/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>日志概述</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>[TOC]</p>
<span id="more"></span>

<h1 id="一、日志概述"><a href="#一、日志概述" class="headerlink" title="一、日志概述"></a>一、日志概述</h1><p>只要程序员投身在实际的学习和生产环境中，就会对日志的重要性有着充分的认知，尤其是对于web以及更高级的应用。在很多情况下，日志可能是我们了解应用如何执行的唯一方式。</p>
<p>但是现实是很多程序员对于日志的记录认知比较肤浅，认为日志的记录输出是一件很简单而且会自动发生的事情，所以会经常忽略和日志相关的问题。</p>
<h1 id="二、日志文件"><a href="#二、日志文件" class="headerlink" title="二、日志文件"></a>二、日志文件</h1><p>日志文件是用于记录系统操作时间的文件集合。</p>
<p>日志文件它具有处理历史数据，诊断问题的追踪以及理解系统的活动等重要的作用。</p>
<h1 id="三、调试日志"><a href="#三、调试日志" class="headerlink" title="三、调试日志"></a>三、调试日志</h1><p>在软件开发中，我们要经常的调试程序，或者做一些状态的输出，便于我们查询程序的运行状况。为了让我们能够更加灵活且方便的控制这些调试信息，我们肯定是需要更加专业的日志技术。我们平时在调试程序的过程中所使用的肯定就是专业开发工具自带的debug功能，可以实时查看程序运行情况，不能有效保存运行情况的信息。调试日志时为了更加方便的去重现这些问题。</p>
<h1 id="四、系统日志"><a href="#四、系统日志" class="headerlink" title="四、系统日志"></a>四、系统日志</h1><p>系统日志是用来记录系统中的硬件、软件和系统相关的信息。同时还可以监视系统中发生的事件，用户可以通过它来检查错误的发生原因，或者寻找到攻击时留下的痕迹。系统日志包括系统日志、应用日志和安全日志这几种分类。</p>
<h1 id="五、日志框架"><a href="#五、日志框架" class="headerlink" title="五、日志框架"></a>五、日志框架</h1><h2 id="5-1、日志框架的作用"><a href="#5-1、日志框架的作用" class="headerlink" title="5.1、日志框架的作用"></a>5.1、日志框架的作用</h2><ul>
<li>控制日志输出的内容和格式</li>
<li>控制日志输出的位置</li>
<li>日志文件相关的优化，如：异步操作、归档、压缩…</li>
<li>日志系统的维护</li>
<li>面向接口的开发–日志门面</li>
</ul>
<h2 id="5-2、为什么使用日志框架（why）"><a href="#5-2、为什么使用日志框架（why）" class="headerlink" title="5.2、为什么使用日志框架（why）"></a>5.2、为什么使用日志框架（why）</h2><p>因为软件系统发展到了今天，非常的复杂，特别是服务器的软件涉及到的知识和内容问题非常的多。对于日志记录来讲，在某些方面使用被人研发好的成熟的框架，这就相当于让别人帮你完成一些基础的工作。你只需要集中精力去完成业务逻辑就可以了。</p>
<p>比如事物处理，日志记录等一些安全性的问题，我们使用框架去做不会影响业务的开发效率。</p>
<p>同时框架也是在不断升级的，我们可以不断的享受框架升级归我们带来的好处。</p>
<h1 id="六、目前java流行的日志框架"><a href="#六、目前java流行的日志框架" class="headerlink" title="六、目前java流行的日志框架"></a>六、目前java流行的日志框架</h1><ul>
<li>JUL  :java util logging【java原生的日志框架】</li>
<li>Log4j ：apache的一个开源项目</li>
<li>logback :由log4j之父做的另一个开源项目，可靠、通用且灵活的java日志框架</li>
<li>log4j2：log4j官方的第二个版本，各个方面都是与logback及其相似、且具有插件式结构、配置文件优化等特征</li>
<li>Springboot1.4版本以后就不再log4j，所以第二个版本Log4j2营运而生</li>
</ul>
<h1 id="七、日志门面和日志实现的区别"><a href="#七、日志门面和日志实现的区别" class="headerlink" title="七、日志门面和日志实现的区别"></a>七、日志门面和日志实现的区别</h1><p><strong>日志实现：</strong>JUL、Logback、Log4j、Log4j2</p>
<p>日志实现：用来方便有效的记录日志信息， 每一种日志框架都有自己单独的API，要使用对应的框架就要使用对应的API，这就大大的增加了应用程序代码对于日志框架的耦合性。</p>
<p><strong>日志门面：</strong> JCL、SLF4J</p>
<p>日志门面： 我们使用了日志门面技术之后，对于应用程序来说，无论底层的日志框架如何改变，应用程序不需要修改任意一行代码，就可以直接上线了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/codefishyyf/images@main/img/20220109201148.png" alt="image-20220109201140502"></p>
]]></content>
      <categories>
        <category>日志框架</category>
      </categories>
      <tags>
        <tag>日志框架</tag>
      </tags>
  </entry>
  <entry>
    <title>日志门面JCL</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E9%97%A8%E9%9D%A2JCL/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
  <entry>
    <title>日志门面SLF4J</title>
    <url>/2022/01/09/%E6%97%A5%E5%BF%97%E9%97%A8%E9%9D%A2SLF4J/</url>
    <content><![CDATA[<span id="more"></span>

<p>[toc]</p>
]]></content>
  </entry>
</search>
